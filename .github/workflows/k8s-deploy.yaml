name: k8s-deploy
"on":
    push:
        branches:
            - main
    workflow_dispatch: {}
env:
    ACR_RESOURCE_GROUP: DevSecO_group
    AZURE_CONTAINER_REGISTRY: DevSecOpsRegAxyt
    CLUSTER_NAME: DevSecOps
    CLUSTER_RESOURCE_GROUP: DevSecO_group
    CONTAINER_NAME: image-build-from-azure
    DEPLOYMENT_MANIFEST_PATH: |
        ./manifest/deploy-user-service.yaml
jobs:
    buildAndPushImage:
        permissions:
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@v1.4.3
              name: Azure login
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            - name: Build and push image to ACR
              run: az acr build --image ${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.ACR_RESOURCE_GROUP }} -f ./Dockerfile ./
    deployToK8sAzure:
        permissions:
            actions: read
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        needs:
            - buildAndPushImage
        steps:
            - uses: actions/checkout@v3
            - uses: cschleiden/replace-tokens@v1
              with:
                files: '["manifest/*.yaml"]'
                tokenPrefix: __ # optional, default is #{
                tokenSuffix: __ # optional, default is }#
              env:
                 DOCKER_REPOSITORY:  devsecopsregaxyt.azurecr.io
                 IMAGE_NAME: ${{ env.CONTAINER_NAME }}
                 IMAGE_TAG: ${{ github.sha }}
            - uses: azure/login@v1.4.3
              name: Azure login
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            - uses: azure/use-kubelogin@v1
              name: Set up kubelogin for non-interactive login
              with:
                kubelogin-version: v0.0.25
            - uses: azure/aks-set-context@v3
              name: Get K8s context
              with:
                admin: "false"
                cluster-name: ${{ env.CLUSTER_NAME }}
                resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
                use-kubelogin: "true"
            - uses: Azure/k8s-deploy@v4
              name: Deploys application
              with:
                action: deploy
                images: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
                manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
                namespace: qa
